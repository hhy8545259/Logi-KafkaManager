server:
  port: 8080
  tomcat:
    accept-count: 1000
    max-connections: 10000
    max-threads: 800
    min-spare-threads: 100

spring:
  application:
    name: kafka-manager
  datasource:
    kafka-manager:
      jdbc-url: jdbc:mysql://app.top5.vip:54228/kafka_manager?characterEncoding=UTF-8&serverTimezone=GMT%2B8
      username: root
      password: Qsd1357
      driver-class-name: com.mysql.jdbc.Driver
  main:
    allow-bean-definition-overriding: true

  profiles:
    active: dev
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

logging:
  config: classpath:logback-spring.xml

custom:
  idc: cn
  jmx:
    max-conn: 10
  store-metrics-task:
    community:
      broker-metrics-enabled: true
      topic-metrics-enabled: true
    didi:
      app-topic-metrics-enabled: true
      topic-request-time-metrics-enabled: true
      topic-throttled-metrics: true
    save-days: 7

account:
  ldap:

kcm:
  enabled: false
  storage:
    base-url: http://127.0.0.1
  n9e:
    base-url: http://127.0.0.1:8004
    user-token: 12345678
    timeout: 300
    account: root
    script-file: kcm_script.sh

monitor:
  enabled: false
  n9e:
    nid: 2
    user-token: 1234567890
    mon:
      base-url: http://127.0.0.1:8032
    sink:
      base-url: http://127.0.0.1:8006
    rdb:
      base-url: http://127.0.0.1:80

notify:
  kafka:
    cluster-id: 95
    topic-name: didi-kafka-notify
  order:
    detail-url: http://127.0.0.1

#eureka client
eureka:
  client:
    serviceUrl:
      defaultZone:  http://ocp:ocp2019@eurekaserver:1111/eureka  #http://130.75.131.241:8761/eureka,http://130.75.131.248:8762/eureka
      #http://134.224.249.33:1111/eureka/  正式库
      #http://134.224.249.33:1111/eureka/  测试库
      #http://127.0.0.1:8761/eureka,http://127.0.0.1:8762/eureka
    registry-fetch-interval-seconds: 2
    instance-info-replication-interval-seconds: 2
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}  #固定端口
    #    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${randomServerPort.value[7000,7005]}}  #随机端口
    #instance-id: ${spring.application.name}:${docker.ipAddress}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 2  #每隔几秒告诉eureka服务器我还存活，用于心跳检测
    lease-expiration-duration-in-seconds: 10 #如果心跳检测一直没有发送，10秒后会从eureka服务器中将此服务剔除
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}/doc.html #固定端口
#    status-page-url: http://${spring.cloud.client.ip-address}:${randomServerPort.value[7000,7005]}/document.html #随机端口